// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZenHotelManagement.Repository;

#nullable disable

namespace ZenHotelManagement.WebApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.CabBooking", b =>
                {
                    b.Property<int>("CabBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabBookingId"));

                    b.Property<int>("CabDriverId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DropOffDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DropOffLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsRideCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PickUpDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PickUpLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CabBookingId");

                    b.HasIndex("CabDriverId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CabBooking");
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.CabDriver", b =>
                {
                    b.Property<int>("CabDriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabDriverId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarVendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CabDriverId");

                    b.ToTable("CabDrivers");

                    b.HasData(
                        new
                        {
                            CabDriverId = 101,
                            Age = 23,
                            CarType = "Sedan",
                            CarVendor = "City Cabs",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Om Patil"
                        },
                        new
                        {
                            CabDriverId = 102,
                            Age = 30,
                            CarType = "Sedan",
                            CarVendor = "Metro Taxi",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Rajesh Kumar"
                        },
                        new
                        {
                            CabDriverId = 103,
                            Age = 28,
                            CarType = "SUV",
                            CarVendor = "Urban Rides",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Priya Sharma"
                        },
                        new
                        {
                            CabDriverId = 104,
                            Age = 35,
                            CarType = "Hatchback",
                            CarVendor = "Express Cabs",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Amit Singh"
                        },
                        new
                        {
                            CabDriverId = 105,
                            Age = 26,
                            CarType = "Sedan",
                            CarVendor = "Quick Taxi",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Sneha Patel"
                        },
                        new
                        {
                            CabDriverId = 106,
                            Age = 40,
                            CarType = "SUV",
                            CarVendor = "Reliable Rides",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Vikram Rao"
                        },
                        new
                        {
                            CabDriverId = 107,
                            Age = 28,
                            CarType = "Hatchback",
                            CarVendor = "Urban Rides",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Aarti Sharma"
                        },
                        new
                        {
                            CabDriverId = 108,
                            Age = 35,
                            CarType = "SUV",
                            CarVendor = "Metro Taxis",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Ravi Kumar"
                        },
                        new
                        {
                            CabDriverId = 109,
                            Age = 30,
                            CarType = "Sedan",
                            CarVendor = "Quick Cabs",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Sneha Desai"
                        },
                        new
                        {
                            CabDriverId = 110,
                            Age = 27,
                            CarType = "Sedan",
                            CarVendor = "Urban Rides",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Priya Joshi"
                        },
                        new
                        {
                            CabDriverId = 111,
                            Age = 32,
                            CarType = "Hatchback",
                            CarVendor = "Metro Taxis",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Amit Patel"
                        },
                        new
                        {
                            CabDriverId = 112,
                            Age = 29,
                            CarType = "SUV",
                            CarVendor = "Quick Cabs",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Kavita Rao"
                        },
                        new
                        {
                            CabDriverId = 113,
                            Age = 45,
                            CarType = "Sedan",
                            CarVendor = "City Cabs",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Rajesh Gupta"
                        },
                        new
                        {
                            CabDriverId = 114,
                            Age = 33,
                            CarType = "SUV",
                            CarVendor = "Urban Rides",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Meera Nair"
                        },
                        new
                        {
                            CabDriverId = 115,
                            Age = 38,
                            CarType = "Sedan",
                            CarVendor = "Metro Taxis",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Suresh Reddy"
                        },
                        new
                        {
                            CabDriverId = 116,
                            Age = 29,
                            CarType = "Hatchback",
                            CarVendor = "Quick Cabs",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Anita Verma"
                        },
                        new
                        {
                            CabDriverId = 117,
                            Age = 36,
                            CarType = "SUV",
                            CarVendor = "City Cabs",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Manoj Kumar"
                        },
                        new
                        {
                            CabDriverId = 118,
                            Age = 27,
                            CarType = "Sedan",
                            CarVendor = "Urban Rides",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Pooja Singh"
                        },
                        new
                        {
                            CabDriverId = 119,
                            Age = 31,
                            CarType = "Hatchback",
                            CarVendor = "Metro Taxis",
                            Gender = "Male",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Karan Mehta"
                        },
                        new
                        {
                            CabDriverId = 120,
                            Age = 34,
                            CarType = "SUV",
                            CarVendor = "Quick Cabs",
                            Gender = "Female",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Divya Sharma"
                        });
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Address = "Karvenagar, Pune",
                            Country = "India",
                            CustomerId = "123412341234",
                            Gender = "Female",
                            IdType = "Aadhar Card",
                            MobileNo = "+919765453674",
                            Name = "Samiksha Shelke"
                        },
                        new
                        {
                            Id = 102,
                            Address = "Kothrud, Pune",
                            Country = "India",
                            CustomerId = "432143214321",
                            Gender = "Male",
                            IdType = "Passport",
                            MobileNo = "+919876543210",
                            Name = "Rohan Deshmukh"
                        },
                        new
                        {
                            Id = 103,
                            Address = "Baner, Pune",
                            Country = "India",
                            CustomerId = "567856785678",
                            Gender = "Female",
                            IdType = "Driving License",
                            MobileNo = "+919876543211",
                            Name = "Priya Sharma"
                        },
                        new
                        {
                            Id = 104,
                            Address = "Aundh, Pune",
                            Country = "India",
                            CustomerId = "876587588765",
                            Gender = "Male",
                            IdType = "Aadhar Card",
                            MobileNo = "+919876543212",
                            Name = "Amit Patil"
                        });
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("AdharNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 101,
                            AdharNo = "123412341234",
                            Age = 23,
                            Email = "yash@gmail.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9834452728",
                            Name = "Yash Chutake",
                            Position = "Manager",
                            Salary = 70000.00m
                        },
                        new
                        {
                            EmployeeId = 102,
                            AdharNo = "234523452345",
                            Age = 22,
                            Email = "rushikesh@gmail.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9876543210",
                            Name = "Rushikesh Kolte",
                            Position = "Accountant",
                            Salary = 45000.00m
                        },
                        new
                        {
                            EmployeeId = 103,
                            AdharNo = "345634563456",
                            Age = 25,
                            Email = "shaibaz@gmail.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9123456789",
                            Name = "Shaibaz Hasware",
                            Position = "Kitchen Staff",
                            Salary = 40000.00m
                        },
                        new
                        {
                            EmployeeId = 104,
                            AdharNo = "456745674567",
                            Age = 21,
                            Email = "abhishek@gmail.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9988776655",
                            Name = "Abhishek Khodade",
                            Position = "Front Desk Clerk",
                            Salary = 40000.00m
                        },
                        new
                        {
                            EmployeeId = 105,
                            AdharNo = "567856785678",
                            Age = 27,
                            Email = "yashkashid@gmail.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9876543211",
                            Name = "Yash Kashid",
                            Position = "Kitchen Staff",
                            Salary = 42000.00m
                        },
                        new
                        {
                            EmployeeId = 106,
                            AdharNo = "678967896789",
                            Age = 24,
                            Email = "samiksha@gmail.com",
                            Gender = "Female",
                            IsDeleted = false,
                            MobileNo = "9123456780",
                            Name = "Samiksha Shelke",
                            Position = "Accountant",
                            Salary = 40000.00m
                        },
                        new
                        {
                            EmployeeId = 107,
                            AdharNo = "123412341234",
                            Age = 45,
                            Email = "tony@stark.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9123456781",
                            Name = "Tony Stark",
                            Position = "Room service",
                            Salary = 12000.00m
                        },
                        new
                        {
                            EmployeeId = 108,
                            AdharNo = "234523452345",
                            Age = 43,
                            Email = "john@wwe.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9123456782",
                            Name = "John Cena",
                            Position = "Manager",
                            Salary = 85000.00m
                        },
                        new
                        {
                            EmployeeId = 109,
                            AdharNo = "345634563456",
                            Age = 41,
                            Email = "randy@wwe.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9123456783",
                            Name = "Randy Orton",
                            Position = "Housekeeping",
                            Salary = 60000.00m
                        },
                        new
                        {
                            EmployeeId = 110,
                            AdharNo = "456745674567",
                            Age = 44,
                            Email = "brock@wwe.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9123456784",
                            Name = "Brock Lesnar",
                            Position = "Waiter",
                            Salary = 50000.00m
                        },
                        new
                        {
                            EmployeeId = 111,
                            AdharNo = "567856785678",
                            Age = 48,
                            Email = "reha@gmail.com",
                            Gender = "Female",
                            IsDeleted = false,
                            MobileNo = "9123456785",
                            Name = "Reha Repli",
                            Position = "Waitress",
                            Salary = 50000.00m
                        },
                        new
                        {
                            EmployeeId = 112,
                            AdharNo = "678967896789",
                            Age = 40,
                            Email = "brucewayne@g.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9123456786",
                            Name = "Bruce Wayne",
                            Position = "Manager",
                            Salary = 15000.00m
                        },
                        new
                        {
                            EmployeeId = 113,
                            AdharNo = "789078907890",
                            Age = 35,
                            Email = "clark.kent@gl.com",
                            Gender = "Male",
                            IsDeleted = false,
                            MobileNo = "9123456787",
                            Name = "Clark Kent",
                            Position = "Waiter",
                            Salary = 55000.00m
                        });
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<decimal>("CostPerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsAc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClean")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoomCapacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RoomStatus")
                        .HasColumnType("bit");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            CostPerNight = 1000.00m,
                            IsAc = true,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 2,
                            RoomNo = "A-101",
                            RoomStatus = true,
                            RoomType = "Single Bed"
                        },
                        new
                        {
                            RoomId = 2,
                            CostPerNight = 1500.00m,
                            IsAc = true,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 2,
                            RoomNo = "A-102",
                            RoomStatus = true,
                            RoomType = "Double Bed"
                        },
                        new
                        {
                            RoomId = 3,
                            CostPerNight = 2000.00m,
                            IsAc = true,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 2,
                            RoomNo = "A-103",
                            RoomStatus = true,
                            RoomType = "Semi Deluxe"
                        },
                        new
                        {
                            RoomId = 4,
                            CostPerNight = 2500.00m,
                            IsAc = true,
                            IsClean = false,
                            IsDeleted = false,
                            RoomCapacity = 2,
                            RoomNo = "A-104",
                            RoomStatus = false,
                            RoomType = "Deluxe"
                        },
                        new
                        {
                            RoomId = 5,
                            CostPerNight = 800.00m,
                            IsAc = false,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 2,
                            RoomNo = "B-201",
                            RoomStatus = true,
                            RoomType = "Single Bed"
                        },
                        new
                        {
                            RoomId = 6,
                            CostPerNight = 1200.00m,
                            IsAc = true,
                            IsClean = false,
                            IsDeleted = false,
                            RoomCapacity = 3,
                            RoomNo = "B-202",
                            RoomStatus = true,
                            RoomType = "Double Bed"
                        },
                        new
                        {
                            RoomId = 7,
                            CostPerNight = 1800.00m,
                            IsAc = true,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 4,
                            RoomNo = "B-203",
                            RoomStatus = false,
                            RoomType = "Semi Deluxe"
                        },
                        new
                        {
                            RoomId = 8,
                            CostPerNight = 3000.00m,
                            IsAc = true,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 3,
                            RoomNo = "B-204",
                            RoomStatus = true,
                            RoomType = "Deluxe"
                        },
                        new
                        {
                            RoomId = 9,
                            CostPerNight = 900.00m,
                            IsAc = false,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 1,
                            RoomNo = "C-301",
                            RoomStatus = true,
                            RoomType = "Single Bed"
                        },
                        new
                        {
                            RoomId = 10,
                            CostPerNight = 1600.00m,
                            IsAc = true,
                            IsClean = false,
                            IsDeleted = false,
                            RoomCapacity = 2,
                            RoomNo = "C-302",
                            RoomStatus = false,
                            RoomType = "Double Bed"
                        },
                        new
                        {
                            RoomId = 11,
                            CostPerNight = 2200.00m,
                            IsAc = true,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 3,
                            RoomNo = "C-303",
                            RoomStatus = true,
                            RoomType = "Semi Deluxe"
                        },
                        new
                        {
                            RoomId = 12,
                            CostPerNight = 2800.00m,
                            IsAc = true,
                            IsClean = false,
                            IsDeleted = false,
                            RoomCapacity = 4,
                            RoomNo = "C-304",
                            RoomStatus = true,
                            RoomType = "Deluxe"
                        },
                        new
                        {
                            RoomId = 13,
                            CostPerNight = 750.00m,
                            IsAc = false,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 1,
                            RoomNo = "D-401",
                            RoomStatus = true,
                            RoomType = "Single Bed"
                        },
                        new
                        {
                            RoomId = 14,
                            CostPerNight = 1400.00m,
                            IsAc = true,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 2,
                            RoomNo = "D-402",
                            RoomStatus = false,
                            RoomType = "Double Bed"
                        },
                        new
                        {
                            RoomId = 15,
                            CostPerNight = 2100.00m,
                            IsAc = true,
                            IsClean = false,
                            IsDeleted = false,
                            RoomCapacity = 3,
                            RoomNo = "D-403",
                            RoomStatus = true,
                            RoomType = "Semi Deluxe"
                        },
                        new
                        {
                            RoomId = 16,
                            CostPerNight = 3200.00m,
                            IsAc = true,
                            IsClean = true,
                            IsDeleted = false,
                            RoomCapacity = 4,
                            RoomNo = "D-404",
                            RoomStatus = true,
                            RoomType = "Deluxe"
                        });
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.RoomBooking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<decimal?>("PendingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.CabBooking", b =>
                {
                    b.HasOne("ZenHotelManagement.Entities.Models.CabDriver", "CabDriver")
                        .WithMany("CabBookings")
                        .HasForeignKey("CabDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZenHotelManagement.Entities.Models.Customer", "Customer")
                        .WithMany("CabBookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CabDriver");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.RoomBooking", b =>
                {
                    b.HasOne("ZenHotelManagement.Entities.Models.Customer", "Customer")
                        .WithMany("RoomBookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZenHotelManagement.Entities.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.CabDriver", b =>
                {
                    b.Navigation("CabBookings");
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.Customer", b =>
                {
                    b.Navigation("CabBookings");

                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("ZenHotelManagement.Entities.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
